# Build stage
FROM node:20-alpine AS build

WORKDIR /app

# Copy package files first (cached layer if package.json doesn't change)
COPY frontend/package*.json ./

# Install dependencies with npm cache
# Using cache mount for npm to speed up rebuilds
RUN --mount=type=cache,target=/root/.npm \
    npm ci --cache /root/.npm

# Copy source code last (changes most frequently)
COPY frontend/ ./

# Build the application
RUN npm run build

# Runtime stage
FROM nginx:alpine

# Copy built files
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
