openapi: 3.0.3
info:
  title: PDF Document Q&A Enhanced RAG API
  description: Hybrid search RAG with reranking, confidence scoring, and precise citations
  version: 2.0.0
servers:
  - url: http://localhost:8002/api/v1
    description: Development server
  - url: https://api.agr-curation.org/v1
    description: Production server

paths:
  /pdf/upload:
    post:
      summary: Upload PDF with deduplication and async processing
      tags:
        - PDF Management
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: PDF file (max 100MB, 500 pages)
                force_reprocess:
                  type: boolean
                  default: false
                enable_ocr:
                  type: boolean
                  default: false
                extract_tables:
                  type: boolean
                  default: true
      responses:
        "200":
          description: PDF uploaded, processing queued
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PDFUploadResponse"
        "400":
          description: Invalid file or exceeds limits
        "409":
          description: Duplicate detected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateResponse"

  /pdf/{pdf_id}/process:
    post:
      summary: Queue PDF for processing (chunking, embedding, indexing)
      tags:
        - PDF Processing
      parameters:
        - name: pdf_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessingRequest"
      responses:
        "202":
          description: Processing job queued
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobResponse"

  /pdf/{pdf_id}/status:
    get:
      summary: Get processing status and metrics
      tags:
        - PDF Processing
      parameters:
        - name: pdf_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Processing status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessingStatus"

  /session/create:
    post:
      summary: Create RAG session with custom configuration
      tags:
        - Chat Session
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSessionRequest"
      responses:
        "201":
          description: Session created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionResponse"
        "400":
          description: PDF not processed or invalid config

  /session/{session_id}/question:
    post:
      summary: Submit question using hybrid RAG pipeline
      tags:
        - RAG Pipeline
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionRequest"
      responses:
        "200":
          description: Answer with confidence and citations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RAGAnswer"
        "206":
          description: Low confidence answer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LowConfidenceAnswer"

  /session/{session_id}/search:
    post:
      summary: Hybrid search without LLM generation
      tags:
        - Search
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HybridSearchRequest"
      responses:
        "200":
          description: Reranked search results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridSearchResponse"

  /jobs/{job_id}:
    get:
      summary: Get job status and progress
      tags:
        - Jobs
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Job details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobDetails"

  /jobs/{job_id}/cancel:
    post:
      summary: Cancel running job
      tags:
        - Jobs
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Job cancelled

  /ontology/expand:
    post:
      summary: Expand query with ontology synonyms
      tags:
        - Ontology
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OntologyExpansionRequest"
      responses:
        "200":
          description: Expanded terms
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OntologyExpansionResponse"

  /settings/embeddings:
    get:
      summary: Get embedding configuration
      tags:
        - Settings
      responses:
        "200":
          description: Current config
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmbeddingConfig"

    put:
      summary: Update embedding configuration
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmbeddingConfigUpdate"
      responses:
        "200":
          description: Config updated

  /metrics:
    get:
      summary: Get system metrics and performance stats
      tags:
        - Monitoring
      responses:
        "200":
          description: Metrics dashboard
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsDashboard"

  /health:
    get:
      summary: Health check with service status
      tags:
        - System
      responses:
        "200":
          description: Service health
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

components:
  schemas:
    PDFUploadResponse:
      type: object
      required:
        - pdf_id
        - status
        - job_id
      properties:
        pdf_id:
          type: string
          format: uuid
        filename:
          type: string
        file_hash:
          type: string
        content_hash_normalized:
          type: string
        status:
          type: string
          enum: [new, duplicate, queued]
        job_id:
          type: string
          format: uuid
        existing_pdf_id:
          type: string
          format: uuid
          description: If duplicate
        metadata:
          type: object
          properties:
            page_count:
              type: integer
            extraction_method:
              type: string
            is_ocr:
              type: boolean

    DuplicateResponse:
      type: object
      properties:
        existing_pdf_id:
          type: string
          format: uuid
        content_hash:
          type: string
        embeddings_ready:
          type: boolean
        message:
          type: string

    ProcessingRequest:
      type: object
      properties:
        chunk_size:
          type: integer
          default: 1000
        chunk_overlap:
          type: integer
          default: 200
        embedding_model:
          type: string
          default: text-embedding-3-small
        extract_tables:
          type: boolean
          default: true
        extract_figures:
          type: boolean
          default: true
        priority:
          type: integer
          minimum: 1
          maximum: 10

    JobResponse:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [PENDING, RUNNING, DONE, FAILED]
        queue_position:
          type: integer
        estimated_time_seconds:
          type: integer

    ProcessingStatus:
      type: object
      properties:
        pdf_id:
          type: string
          format: uuid
        extraction_complete:
          type: boolean
        chunking_complete:
          type: boolean
        embeddings_complete:
          type: boolean
        indexing_complete:
          type: boolean
        progress_percent:
          type: integer
        chunk_count:
          type: integer
        table_count:
          type: integer
        figure_count:
          type: integer
        processing_time_ms:
          type: integer
        errors:
          type: array
          items:
            type: string

    CreateSessionRequest:
      type: object
      required:
        - pdf_id
      properties:
        pdf_id:
          type: string
          format: uuid
        user_id:
          type: string
        rag_config:
          type: object
          properties:
            llm_model:
              type: string
              default: gpt-4o-mini
            embedding_model:
              type: string
            top_k_vector:
              type: integer
              default: 50
            top_k_lexical:
              type: integer
              default: 50
            rerank_top_k:
              type: integer
              default: 5
            similarity_threshold:
              type: number
              default: 0.7
            confidence_threshold:
              type: number
              default: 0.7
            mmr_lambda:
              type: number
              default: 0.7
            use_ontology_expansion:
              type: boolean
              default: true
            max_expansions:
              type: integer
              default: 5

    SessionResponse:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
        session_token:
          type: string
        pdf_id:
          type: string
          format: uuid
        rag_config:
          type: object
        created_at:
          type: string
          format: date-time

    QuestionRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string
          maxLength: 2000
        search_sections:
          type: array
          items:
            type: string
          description: Limit search to specific sections
        include_tables:
          type: boolean
          default: true
        include_figures:
          type: boolean
          default: true

    RAGAnswer:
      type: object
      required:
        - answer
        - confidence_score
        - citations
      properties:
        answer:
          type: string
        confidence_score:
          type: number
          minimum: 0
          maximum: 1
        citations:
          type: array
          items:
            $ref: "#/components/schemas/Citation"
        retrieval_stats:
          type: object
          properties:
            query_expansions:
              type: array
              items:
                type: string
            vector_hits:
              type: integer
            lexical_hits:
              type: integer
            reranked_count:
              type: integer
            mmr_applied:
              type: boolean
        performance_metrics:
          type: object
          properties:
            total_ms:
              type: integer
            vector_search_ms:
              type: integer
            lexical_search_ms:
              type: integer
            rerank_ms:
              type: integer
            generation_ms:
              type: integer
        cost:
          type: object
          properties:
            tokens_used:
              type: integer
            cost_usd:
              type: number

    LowConfidenceAnswer:
      type: object
      properties:
        message:
          type: string
          default: "Insufficient evidence to answer confidently"
        confidence_score:
          type: number
        suggested_sections:
          type: array
          items:
            type: string
        partial_evidence:
          type: array
          items:
            $ref: "#/components/schemas/Citation"
        reformulation_suggestions:
          type: array
          items:
            type: string

    Citation:
      type: object
      properties:
        text:
          type: string
        page:
          type: integer
        section:
          type: string
        confidence:
          type: number
        source_type:
          type: string
          enum: [vector, lexical, both]
        bbox:
          type: object
          properties:
            x1:
              type: number
            y1:
              type: number
            x2:
              type: number
            y2:
              type: number
        chunk_id:
          type: string
          format: uuid

    HybridSearchRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
        top_k_vector:
          type: integer
          default: 50
        top_k_lexical:
          type: integer
          default: 50
        rerank_top_k:
          type: integer
          default: 10
        use_mmr:
          type: boolean
          default: true
        mmr_lambda:
          type: number
          default: 0.7
        expand_query:
          type: boolean
          default: true

    HybridSearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              chunk_id:
                type: string
                format: uuid
              text:
                type: string
              score:
                type: number
              source:
                type: string
                enum: [vector, lexical, both]
              page:
                type: integer
              section:
                type: string
              is_table:
                type: boolean
              is_figure:
                type: boolean
        query_expansions:
          type: array
          items:
            type: string
        search_metrics:
          type: object
          properties:
            vector_candidates:
              type: integer
            lexical_candidates:
              type: integer
            overlap_count:
              type: integer
            final_count:
              type: integer

    JobDetails:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
        job_type:
          type: string
        status:
          type: string
        progress:
          type: integer
        total_items:
          type: integer
        processed_items:
          type: integer
        error_log:
          type: string
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        estimated_completion:
          type: string
          format: date-time

    OntologyExpansionRequest:
      type: object
      required:
        - terms
      properties:
        terms:
          type: array
          items:
            type: string
        max_expansions_per_term:
          type: integer
          default: 5
        ontology_sources:
          type: array
          items:
            type: string
          default: [DO, GO, UniProt]

    OntologyExpansionResponse:
      type: object
      properties:
        expansions:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                synonym:
                  type: string
                confidence:
                  type: number
                source:
                  type: string

    EmbeddingConfig:
      type: object
      properties:
        embedding_model:
          type: string
        model_dim:
          type: integer
        chunk_size:
          type: integer
        chunk_overlap:
          type: integer
        batch_size:
          type: integer
        available_models:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              dimension:
                type: integer
              cost_per_1k_tokens:
                type: number

    EmbeddingConfigUpdate:
      type: object
      properties:
        embedding_model:
          type: string
        chunk_size:
          type: integer
          minimum: 100
          maximum: 2000
        chunk_overlap:
          type: integer
          minimum: 0
          maximum: 500
        batch_size:
          type: integer
          minimum: 1
          maximum: 100

    MetricsDashboard:
      type: object
      properties:
        system:
          type: object
          properties:
            uptime_seconds:
              type: integer
            active_sessions:
              type: integer
            queue_depth:
              type: integer
        performance:
          type: object
          properties:
            avg_vector_search_ms:
              type: number
            avg_lexical_search_ms:
              type: number
            avg_rerank_ms:
              type: number
            avg_pipeline_ms:
              type: number
            p95_pipeline_ms:
              type: number
        quality:
          type: object
          properties:
            total_queries:
              type: integer
            high_confidence_ratio:
              type: number
            low_confidence_count:
              type: integer
            no_answer_count:
              type: integer
        costs:
          type: object
          properties:
            total_embedding_tokens:
              type: integer
            total_llm_tokens:
              type: integer
            total_cost_usd:
              type: number
            cost_today_usd:
              type: number

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        services:
          type: object
          properties:
            database:
              type: string
            pgvector:
              type: string
            openai:
              type: string
            job_queue:
              type: string
            storage:
              type: string
        checks:
          type: object
          properties:
            hnsw_index:
              type: boolean
            lexical_index:
              type: boolean
            ontology_loaded:
              type: boolean
            disk_space_ok:
              type: boolean
